<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="tbtnregistrar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAB
        AAAAAQABTdB3JwAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAASiSURBVFhHrZVr
        bBRVFMe3GDAxUUzQCGUfLVIaNPhAoh9qAn4y8YMxMZHEGINGG2Ifu1UjkBIz3aWW9ING2yp1H9Pa3WnT
        GKQhGEUiKXRmF9LHLoIgWvwASgzpzHSXCuyD67nDzvT2zpmmUZv8djtnZv6/szN3zrgIIc6M9y7Xk7HN
        mhx+Q01G6si3n92NHvcfQIsUbSz6oiZH/gAIw01Njr6LHf9vQYu6Eq7nxAtQlXADHFdRTMe2FzNiTzET
        U+D7SCEtBm+dETfxeYthK8yMxjwgyfJShlEyMbC+mBaPAQQhX0rH9pLh4bv4bAxbQZUj7yBSA12Onp8b
        H1gDv/QCIl5AIR1r47MxbAUQhXmxhRJ9vZDu+xgT2ukr5DOxzXw+j62gy5EeVH4HH4RrdhlOISN+wufz
        2ArqWHQnIqb8TtL9GzCRI1PiKJ/PYyvMpsQakBU5OeVEId3/HCpyANbKRT6fBy3C4InbGlAi18lpcTUm
        ciQjHsLyWdCiLvc+DFKVb4JORQi+YhM5AAs2hOWzoEXKnRG8sAl1LNIIl7UDkyGUyMRXG7FsFrQ4K7Ss
        p9/6aLgaxHuBEzCau+E2PElO9a+C8Cwns5MRE3wuxoKN3EdND6qCf0gT/EQVAr1/CvX3sPuJIKy4JjRW
        lqb6PkCl8+hkSqxZcK4D1j+aEKjSBf9VKmf4CzgI+wTgEPyfAy7PCE33LXIrdBhAz7CSxTA+aCAEnwVY
        OcZFLdi01TwZZn5jaUrMlMU3i1OxkfxkdIu5fykYH5rQHEZkLEW4NZ17uvtXeRPJT72DslgbHbvXCjoT
        W0cuRK1td0J52ispo1WDyW3WMQ64rrUH1oDgFifkCLzpjSfrIHQaIGWmfZL8cqU0/oARBK9nbzz1iCeR
        DMG+QvmYIvChSyDLeLEJ/Hp/yC6cB9ZFe/XQycchKFcOxfgNULmaiQbsxuQUF6z27zFxmcO10aOVEHCZ
        CVwi8km3lHpsev+ulXAFt6lC8wvX2/0P2RoAySVOanJbDbZs8krJr3GBMx4p2fpLa+va8pNzm8ud1IWA
        9ZqmDfzIHWAysnbo1AYILPGCxZHjIH4CzlfNrJzYRea+ibPZBVjUrxoNwHBZprYF9kAxzxxA9Db/dvj1
        X+ISR67u6BleDef/xGb9/d1Bkj87aW2X0eHxd1v3gl6W8hQ0ngg68byDyiVE4kxC+YI+MYzEwKEBSpfV
        gAkdx7rQXP9U7/hyCKWPES5D8EnJt+Cp+dwID71H9H3vG9w4OkLy59LWNgUapQ2ctjVg4k6kajDJ4qSe
        haH2A22AFAsQ4/yXPdBJG8iicsqjw+dWeAaVLlzkhPwa3MYDtAG9YxfR9+82uHHsMMn/nLG2KVpbC21g
        ApWzwEJ8BcLpMEGENjph8b5NG2BxWgP0dqFSnirx+P1wNYIgmOWEPFca4H0BwedZkUMDWW1fgw8VOkEb
        oZfZJykSyGY4uUmHLrRsMQRlWa6/m8yNDLLyEizCHTQTFS0F+KigLyI6bj0J5Xm3pGytHhirXTc8vpLu
        B0EViI4zUpNf1WCgjsmxh/+f0GEDzbxEJ1825K+FUsX8fuL6B5LFfFGdRvT2AAAAAElFTkSuQmCC
</value>
  </data>
</root>